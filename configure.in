dnl Process this file with autoconf to produce a configure script.

dnl
dnl Initialization
dnl

dnl disable loading config.site
define([AC_SITE_LOAD], )dnl

AC_PREREQ(2.53)
AC_INIT([ietl],[2.1])
AC_CONFIG_AUX_DIR([config])

AC_PREFIX_DEFAULT([$HOME/ietl])

AC_CONFIG_FILES(Makefile config/Makefile config/config.site config/arxx config/include.mk)
AC_CONFIG_FILES(examples/Makefile ietl/Makefile)
AC_CONFIG_HEADERS(ietl/config.h)

# directories

dirs='ietl test examples'
for d in $dirs; do
  if test -d "$d"; then :; else mkdir -p "$d"; fi
done

if test -z test/Makefile.in ; then
  AC_CONFIG_FILES(test/Makefile)
fi


# setting up cache file
cache_file='config/config.cache'
if test -d "config"; then :; else mkdir config; fi
if test -f $cache_file; then :; else touch $cache_file; fi

# fix directories
test "$prefix" = NONE && prefix=$ac_default_prefix
test "$exec_prefix" = NONE && exec_prefix=$prefix
test "$bindir" = '${exec_prefix}/bin' && bindir="$exec_prefix/bin"
test "$datadir" = '${prefix}/share' && datadir="$prefix/share"
test "$libdir" = '${exec_prefix}/lib' && libdir="$exec_prefix/lib"
test "$includedir" = '${prefix}/include' && includedir="$prefix/include"

ac_cv_ietl_prefix="$prefix"
ac_cv_ietl_exec_prefix="$exec_prefix"
ac_cv_ietl_bindir="$bindir"
ac_cv_ietl_datadir="$datadir"
ac_cv_ietl_libdir="$libdir"
ac_cv_ietl_includedir="$includedir"

ac_cv_ietl_include_mk="$datadir/$PACKAGE_NAME/include.mk"
ac_cv_ietl_rules_mk="$datadir/$PACKAGE_NAME/rules.mk"
ac_cv_ietl_rules_lib_mk="$datadir/$PACKAGE_NAME/rules-lib.mk"

#
# Tools/Programs
#

# C/C++ compiler
sinclude(config/ac_compiler.m4)
AC_COMPILER

# C/C++ preprocessor
AC_PROG_CPP
AC_PROG_CXXCPP

# Install script
AC_PROG_INSTALL
AC_SUBST(IETL_INSTALL)
if test "$INSTALL" = "$ac_install_sh"; then
  IETL_INSTALL='$(install_sh) -c'
else
  IETL_INSTALL="$INSTALL"
fi


# other tools
AC_SUBST(AR)
AC_SUBST(ARXX)
AR="ar cru"
ARXX="$bindir/arxx"
AC_PROG_LN_S

AC_SUBST(RANLIB)
test "$ac_cv_compiler" = "sgi32" && RANLIB="/bin/true"
test "$ac_cv_compiler" = "sgi64" && RANLIB="/bin/true"
AC_PROG_RANLIB

# Checks for library functions.
AC_CHECK_FUNCS([pow sqrt])


#
# checking Blitz++ directory
#

AC_SUBST(BLITZ_FLAGS)
AC_SUBST(BLITZ_LDFLAGS)
AC_SUBST(BLITZ_LIBS)
AC_SUBST(EXAMPLE_BLITZ)
AC_SUBST(OBJ_BLITZ)
AC_ARG_WITH(blitz,
  AC_HELP_STRING([--with-blitz=DIR],[path to the Blitz main tree]),
  [
  if test "x$withval" = "xno"; then
    ac_cv_have_blitz=no
  else
    if test "x$withval" != "x"; then
      ac_cv_blitz_dir=`echo "$withval" | sed 's,//*,/,g' | sed 's,/$,,'`
      if test -f "ac_cv_blitz_dir/include/blitz/config.h"; then :; else
        ac_cv_blitz_dir=
      fi
    fi
  fi
  ]
)

if test "x$ac_cv_have_blitz" != "xno"; then
  AC_MSG_CHECKING([for Blitz++ main tree])
  if test -z "$ac_cv_boost_dir"; then
    for d in $HOME $HOME/src $prefix $prefix/src /usr/local /usr/local/src
    do
      if test -f "$d/include/blitz/config.h"; then
        if test -f "$d/lib/libblitz.a"; then
          ac_cv_blitz_dir="$d"
          break
        fi
      fi
    done
  fi
  if test -d "$ac_cv_blitz_dir"; then
    ac_cv_have_blitz=yes
    AC_MSG_RESULT([$ac_cv_blitz_dir])
    AC_DEFINE(IETL_HAVE_BLITZ)
    BLITZ_FLAGS="-I$ac_cv_blitz_dir/include"
    BLITZ_LIBS="-lblitz"
    BLITZ_LDFLAGS="-L$ac_cv_blitz_dir/lib"
  else
    AC_MSG_RESULT([not found])
    ac_cv_have_blitz=no
  fi
fi

#
# checking boost directory
#

AC_SUBST(BOOST_FLAGS)
AC_ARG_WITH(boost,
  AC_HELP_STRING([--with-boost=DIR],[path to the boost main tree]),
  [
  if test "x$withval" = "xno"; then
    boost=no
  else
    if test "x$withval" != "x"; then
      ac_cv_boost_dir=`echo "$withval" | sed 's,//*,/,g' | sed 's,/$,,'`
      if test -f "$ac_cv_boost_dir/boost/config.hpp"; then :; else
        ac_cv_boost_dir=
      fi
    fi
  fi
  ]
)
if test "x$boost" != "xno"; then
  AC_MSG_CHECKING([for boost main tree])
  if test -z "$ac_cv_boost_dir"; then
    for d in $HOME $HOME/src $prefix $prefix/src /usr/local /usr/local/src
    do
      if test -f "$d/boost/boost/config.hpp"; then
        ac_cv_boost_dir="$d/boost"
        break
      fi
    done
  fi
  if test -d "$ac_cv_boost_dir"; then
    AC_MSG_RESULT([$ac_cv_boost_dir])
  else
    AC_MSG_RESULT([not found])
  fi
  AC_DEFINE(IETL_HAVE_BOOST)
  BOOST_FLAGS="-I$ac_cv_boost_dir"
fi


# check whether Boost::configure is used or not
AC_SUBST(BOOST_USER_CONFIG_H)
AC_ARG_ENABLE(boost-config,
  AC_HELP_STRING([--enable-boost-config],
    [setup boost configuration header file]),
  [
  if test "x$enableval" != "xno"; then
    ac_cv_boost_config=yes
  fi
  ]
)

AC_MSG_CHECKING([whether use boost configuration header file])
test -z "$ac_cv_boost_config" && ac_cv_boost_config=no
if test "$ac_cv_boost_config" = yes; then
  ac_cv_boost_config="$includedir/$PACKAGE_NAME/boost-user.hpp"
  if test -f "$ac_cv_boost_dir/libs/config/configure"; then :; else
    AC_MSG_RESULT
    AC_MSG_ERROR([boost configure script was not found.])
  fi
fi
AC_MSG_RESULT([$ac_cv_boost_config])
  
#
# checking boost bindings directory
#

AC_ARG_WITH(bindings,
  AC_HELP_STRING([--with-bindings=DIR],[path to the uBLAS bindings main tree]),
  [
  if test "x$boost" = "xno"; then
    boostbindings=no
  else
    if test "x$withval" = "xno"; then
      boostbindings=no
    else
      if test "x$withval" != "x"; then
        ac_cv_boostbindings_dir=`echo "$withval" | sed 's,//*,/,g' | sed 's,/$,,'`
        if test -f "$ac_cv_boostbindings_dir/boost/numeric/bindings/blas/blas1.hpp"; then :; else
          ac_cv_boostbindings_dir =
        fi
      fi
    fi
  fi
  ]
)
if test "x$boostbindings" != "xno"; then
  AC_MSG_CHECKING([for Boost ublas bindings tree])
  if test -z "$ac_cv_boostbindings_dir"; then
    for d in $HOME $HOME/src $prefix $prefix/src /usr/local /usr/local/src
    do
      if test -f "$d/bindings/boost/numeric/bindings/blas/blas1.hpp"; then
        ac_cv_boostbindings_dir="$d/bindings"
        break
      fi
      if test -f "$d/boost-sandbox/boost/numeric/bindings/blas/blas1.hpp"; then
        ac_cv_boostbindings_dir="$d/boost-sandbox"
        break
      fi
    done
  fi
  if test -d "$ac_cv_boostbindings_dir"; then
    AC_MSG_RESULT([$ac_cv_boostbindings_dir])
    AC_DEFINE(IETL_HAVE_BOOST_SANDBOX)
    BOOSTSANDBOX_FLAGS="-DBOOST_NUMERIC_BINDINGS_NO_STRUCTURE_CHECK -I$ac_cv_boostbindings_dir"
  else
    AC_MSG_RESULT([not found])
  fi
fi

AC_SUBST(BOOSTSANDBOX_FLAGS)

# making distribution
if test -f "$srcdir/dist/Makefile.in"; then
  AC_CONFIG_FILES(dist/Makefile)
fi

#
# checking for system headers
#

AC_LANG_CPLUSPLUS

AC_CHECK_HEADER([stdint.h])
test "$ac_cv_header_stdint_h" = yes && AC_DEFINE(IETL_HAVE_STDINT_H)

AC_CHECK_HEADER([inttypes.h])
test "$ac_cv_header_inttypes_h" = yes && AC_DEFINE(IETL_HAVE_INTTYPES_H)

AC_CHECK_HEADER([unistd.h])
test "$ac_cv_header_unistd_h" = yes && AC_DEFINE(IETL_HAVE_UNISTD_H)

AC_CHECK_HEADER([bind/bitypes.h])
test "$ac_cv_header_bind_bitypes_h" = yes && AC_DEFINE(IETL_HAVE_BIND_BITYPES_H)

AC_CHECK_HEADER([sys/int_types.h])
test "$ac_cv_header_sys_int_types_h" = yes && AC_DEFINE(IETL_HAVE_SYS_INT_TYPES_H)

AC_CHECK_HEADER([sys/types.h])
test "$ac_cv_header_sys_types_h" = yes && AC_DEFINE(IETL_HAVE_SYS_TYPES_H)

# checking for other C++ headers
sinclude(config/ac_cxx_namespaces.m4)

#
# check for libm
#

AC_CHECK_LIB(m, sqrt)

#
# checking for BLAS, ATLAS and LAPACK
#

sinclude(config/ac_lapack.m4)
AC_SUBST(OBJ_BINDINGS)
AC_SUBST(EXAMPLE_BINDINGS)
AC_LAPACK
if test "$ac_cv_have_lapack" = yes; then
  if test "x$ac_cv_boostbindings_dir" != x ; then
    EXAMPLE_BINDINGS='$(EXAMPLE_BINDINGS)'
    OBJ_BINDINGS='$(OBJ_BINDINGS)'
  fi
  if test "$ac_cv_have_blitz" = yes ; then
    EXAMPLE_BLITZ='$(EXAMPLE_BLITZ)'
    OBJ_BLITZ='$(OBJ_BLITZ)'
  fi
fi  
#  AC_DEFINE(ALPS_HAVE_BLAS)
#  LIB_LAPACK='$(LIB_LAPACK)'
#  EXAMPLE_LAPACK='$(EXAMPLE_LAPACK)'
#  OBJ_LAPACK='$(OBJ_LAPACK)'


#
# configuring boost
#

if test "$ac_cv_boost_config" != no; then
  AC_MSG_NOTICE([running boost configuration script])
  boost_configure="sh $ac_cv_boost_dir/libs/config/configure"
  mkdir -p src/boost
  command="(cd src/boost && export CXX=\"$CXX\" CXXFLAGS=\"$CXXFLAGS\" CPPFLAGS=\"$CPPFLAGS\" LDFLAGS=\"$LDFLAGS\" && $boost_configure --with-boost=$ac_cv_boost_dir)"
  echo "$command"
  eval "$command"
  CPPFLAGS="$CPPFLAGS -DBOOST_USER_CONFIG=\<boost/user.hpp\>"
  BOOST_USER_CONFIG_H="boost/user.hpp"
fi

# setup BASE_CPPFLAGS, BASE_LDFLAGS, BASE_LIBS
AC_SUBST(BASE_CPPFLAGS)
BASE_CPPFLAGS="$CPPFLAGS"
ac_cv_ietl_CPPFLAGS="$CPPFLAGS"
AC_SUBST(BASE_LDFLAGS)
BASE_LDFLAGS="$LDFLAGS"
ac_cv_ietl_LDFLAGS="$LDFLAGS"
AC_SUBST(BASE_LIBS)
BASE_LIBS="$LIBS"
ac_cv_ietl_LIBS="$LIBS"

ac_cv_ietl_CXX="$CXX"
ac_cv_ietl_CXXFLAGS="$CXXFLAGS"

#
# Generate files
#

AC_OUTPUT

dnl
dnl output summary
dnl

echo
echo "Summary of configuration:"
echo "  IETL version      $PACKAGE_VERSION"
echo "  compiler type     $ac_cv_compiler"
echo "  exceptions        $ac_cv_compiler_exceptions"
echo "  optimization      $ac_cv_compiler_optimization"
if test "x$boost" != "xno"; then
  echo "  boost             $ac_cv_boost_dir"
fi
if test "x$boostbindings" != "xno"; then
  echo "  uBLAS bindings    $ac_cv_boostbindings_dir"
fi
echo "  blas              $ac_cv_have_blas"
echo "  atlas             $ac_cv_have_atlas"
echo "  lapack            $ac_cv_have_lapack"
echo "  Blitz++           $ac_cv_have_blitz"
